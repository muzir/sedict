root: .
  paths:
    - build
test:
  # Remove if parallelism is not desired
  parallelism: 2
  environment:
    # Configure the JVM and Gradle to avoid OOM errors
    _JAVA_OPTIONS: "-Xmx3g"
    GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
  docker:
    - image: cimg/openjdk:17.0
    - image: cimg/postgres:16.0
      environment:
        POSTGRES_USER: postgres
        POSTGRES_PASS: mysecretpassword
        POSTGRES_DB: stackoverflow
  steps:
    - checkout
    - attach_workspace:
        at: .
    - run:
        name: Run tests in parallel
        # Use "./gradlew test" instead if tests are not run in parallel
        command: |
          cd src/test/java
          # Get list of classnames of tests that should run on this node
          CLASSNAMES=$(circleci tests glob "**/*.java" \
            | cut -c 1- | sed 's@/@.@g' \
            | sed 's/.\{5\}$//' \
            | circleci tests split --split-by=timings --timings-type=classname)
          cd ../../..
          # Format the arguments to "./gradlew test"
          GRADLE_ARGS=$(echo $CLASSNAMES | awk '{for (i=1; i<=NF; i++) print "--tests",$i}')
          echo "Prepared arguments for Gradle: $GRADLE_ARGS"
          ./gradlew test $GRADLE_ARGS
    - run:
        name: Generate code coverage report
        command:
          ./gradlew jacocoTestReport
    - store_test_results:
        path: build/test-results/test
    - store_artifacts:
        path: build/test-results/test
        when: always
    - store_artifacts:
        path: build/reports/jacoco/test/html
        when: always
    - run:
        name: Assemble JAR
        command: |
          # Skip this for other nodes
          if [ "$CIRCLE_NODE_INDEX" == 0 ]; then
            ./gradlew assemble
          fi
    # This will be empty for all nodes except the first one
    - store_artifacts:
        path: build/libs

workflows:
  version: 2
  workflow:
    jobs:
      - build
      - test:
          requires:
            - build